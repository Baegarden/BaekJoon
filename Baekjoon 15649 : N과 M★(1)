import java.io.*;

// Baekjoon 15649 : N과 M (1)
public class Main {
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    static int N, M;
    static int []arr = new int[9];
    public static void BT(int n) throws IOException {
        if (n == M) {
            //중복체크
            for (int i = 0; i < M; i++) {
                for (int j = i + 1; j < M; j++) {
                    if(arr[i] == arr[j])
                        return;
                }
            }
            //출력
            for (int i = 0; i < M; i++) {
                System.out.print(arr[i] + " ");
            }
            System.out.print("\n");
            return;
        }
        for (int i = 0; i < N; i++) {
            arr[n] = i + 1;
            BT(n + 1);
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String []s = br.readLine().split(" ");
        N = Integer.parseInt(s[0]);
        M = Integer.parseInt(s[1]);
        BT(0);
    }
}

# Baekjoon 15649(py) : N과 M (1)
N, M = map(int, input().split())
array = [0 for i in range(10)]
isUsed = [0 for i in range(10)]

def backTrack(depth):
    if depth == M:
        for i in range(M):
            print(array[i], end=" ")
        print()
        return
    for i in range(0, N):
        if isUsed[i] == 0:
            array[depth] = i + 1    # index는 0부터 Sequence는 1부터
            isUsed[i] = 1
            backTrack(depth + 1)
            isUsed[i] = 0

backTrack(0)
