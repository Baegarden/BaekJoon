# Baekjoon 1753 : 최단경로(다익스트라)
import sys
import heapq

# 입력
input = sys.stdin.readline
V, E = map(int, input().split())
st = int(input())
arr = [[] for i in range(V+1)]
for i in range(E):
    u, v, w = map(int, input().split())
    arr[u].append([w, v])   # [가중치, 목적지 노드]

# 알고리즘
INF = sys.maxsize
distance = [INF] * (V+1)
heap = []


def Dijkstra(start):
    # 시작 정점에 해당하는 가중치는 0으로 초기화 [0, INF, INF, ... , INF]
    distance[start] = 0
    heapq.heappush(heap, [0, start])

    while heap:
        now_W, now_V = heapq.heappop(heap)

        if distance[now_V] < now_W:     # 다른경로 < 진행할 경로 이면 진행할 이유가 없으니
            continue

        for a, b in arr[now_V]:
            next_W = now_W + a
            if next_W < distance[b]:    # 전 경로 + 진행할 경로 < 다른경로 일경우
                distance[b] = next_W
                heapq.heappush(heap, [next_W, b])


# 출력
Dijkstra(st)
for i in range(1, V+1):
    if distance[i] == INF:
        print("INF")
    else:
        print(distance[i])
