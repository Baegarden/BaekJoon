# Baekjoon 14502 : 연구소

from collections import deque
import sys
import copy

# 입력
input = sys.stdin.readline
N, M = map(int, input().split())
arr = []
for i in range(N):
    arr.append(list(map(int, input().split())))

# 알고리즘
answer = 0
dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]


def bfs():
    tmpArr = copy.deepcopy(arr)
    global answer

    queue = deque()
    for i in range(N):
        for j in range(M):
            if tmpArr[i][j] == 2:
                queue.append([i, j])
                
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or ny < 0 or nx >= N or ny >= M:
                continue

            if tmpArr[nx][ny] == 0:
                tmpArr[nx][ny] = 2
                queue.append([nx, ny])

    count = 0
    for i in tmpArr:
        count += i.count(0)
    answer = max(answer, count)


def makeWall(n):
    if n == 3:
        bfs()
        return

    for i in range(N):
        for j in range(M):
            if arr[i][j] == 0:
                arr[i][j] = 1
                makeWall(n + 1)
                arr[i][j] = 0


# 출력
makeWall(0)
print(answer)
