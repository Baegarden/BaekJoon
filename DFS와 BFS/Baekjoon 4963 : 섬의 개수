# Baekjoon 4963 : 섬의 개수

from collections import deque

# 입력

# 알고리즘
dx = [1, 1, 1, -1, -1, -1, 0, 0]
dy = [0, 1, -1, 0, 1, -1, 1, -1]


def bfs(i, j, w, h, arr):
    queue = deque()
    queue.append([i, j])
    while queue:
        x, y = queue.popleft()
        for i in range(8):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or nx >= h or ny < 0 or ny >= w:
                continue
            if arr[nx][ny] == 1:
                arr[nx][ny] = 0
                queue.append([nx, ny])

while True:
    w, h = map(int, input().split())
    if w == 0 and h == 0:
        break

    if w == 1 and h == 1:
        n = int(input())
        print(n)
    else:
        arr = []
        for i in range(h):
            arr.append(list(map(int, input().split())))
        count = 0
        for i in range(h):
            for j in range(w):
                if arr[i][j] == 1:
                    bfs(i, j, w, h, arr)
                    count += 1
        print(count)

# 출력
