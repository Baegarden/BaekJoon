# Baekjoon 16234 : 인구 이동

from collections import deque

# 입력
N, L, R = map(int, input().split(" "))
arr = []
for i in range(N):
    arr.append(list(map(int, input().split(" "))))

# 알고리즘
dx = [0, 0, 1, -1]
dy = [1, -1, 0, 0]

def bfs(a, b):
    queue = deque()
    queue.append([a, b])
    temp = []
    temp.append([a, b])
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or nx >= N or ny < 0 or ny >= N:
                continue
                      
            if abs(arr[x][y] - arr[nx][ny]) >= L and abs(arr[x][y] - arr[nx][ny]) <= R and visit[nx][ny] == 0:
                visit[nx][ny] = 1
                queue.append([nx, ny])
                temp.append([nx, ny])
    return temp

# 출력
answer = 0
while True:
    visit = [[0 for i in range(N)] for i in range(N)]
    flag = False
    for i in range(N):
        for j in range(N):
            if visit[i][j] == 0:
                visit[i][j] = 1
                country = bfs(i, j)
                if len(country) > 1:
                    flag = True
                    num = sum([arr[x][y] for x, y in country]) // len(country)
                    for x, y in country:
                        arr[x][y] = num
    if not flag:
        break
    answer += 1

print(answer)
