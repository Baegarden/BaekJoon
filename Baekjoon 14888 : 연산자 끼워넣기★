import java.io.*;

// Baekjoon 14888 : 연산자 끼워넣기
public class Main {
    static int N;
    static int[] num;
    static int[] oper = new int[4];
    static int min = 1000000000;
    static int max = -1000000000;
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

    public static int operate(int a, int b, int op) {
        int result = 0;
        if(op == 0) result = a + b;
        else if(op == 1) result = a - b;
        else if(op == 2) result = a * b;
        else if(op == 3) result = a / b;

        return result;
    }

    public static void BT(int preResult, int opNum) throws Exception {
        if(opNum == N - 1) {
            if(preResult < min)
                min = preResult;
            if(preResult > max)
                max = preResult;
            return;
        }
        for(int i = 0; i < 4; i++) {
            int result;
            if(oper[i] != 0) {
                result = operate(preResult,num[opNum + 1], i);
                oper[i]--;
                BT(result,opNum + 1);
                oper[i]++;
            }
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());

        num = new int[N];
        String[] tmp1 = br.readLine().split(" ");
        for(int i = 0; i < N; i++) {
            num[i]=Integer.parseInt(tmp1[i]);
        }

        String[] tmp2 = br.readLine().split(" ");
        for(int i = 0; i < 4; i++) {
            oper[i]=Integer.parseInt(tmp2[i]);
        }

        BT(num[0],0);

        bw.write(max + "\n" + min);
        bw.flush();
        bw.close();
    }

}
