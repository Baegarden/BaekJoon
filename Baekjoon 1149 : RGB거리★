import java.io.*;

// Baekjoon 1149 : RGB거리
public class Main {
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    public static void main(String [] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int[][] num = new int[N][3];
        int[][] sum = new int[N+1][3];
        int min_sum;

        for (int i = 0; i < N; i++) {
            String[] str = br.readLine().split(" ");
            num[i][0] = Integer.parseInt(str[0]);
            num[i][1] = Integer.parseInt(str[1]);
            num[i][2] = Integer.parseInt(str[2]);
        }

        for(int i = 1; i <= N; i++) {
            sum[i][0] = Math.min(sum[i - 1][1], sum[i - 1][2]) + num[i - 1][0]; // 빨강기준
            sum[i][1] = Math.min(sum[i - 1][0], sum[i - 1][2]) + num[i - 1][1]; // 초록기준
            sum[i][2] = Math.min(sum[i - 1][0], sum[i - 1][1]) + num[i - 1][2]; // 파랑기준
        }

        // 최소값 도출
        min_sum = Math.min(sum[N][0], sum[N][1]);
        min_sum = Math.min(min_sum, sum[N][2]);

        System.out.print(min_sum);
    }
}


# Baekjoon 1149(py) : RGB거리
N = int(input())
rgb = [[0 for j in range(3)] for i in range(N)]
sum = [[0 for j in range(3)] for i in range(N+1)]

for i in range(N):
    rgb[i] = list(map(int, input().split()))

for i in range(1, N+1):
    sum[i][0] = min(sum[i-1][1], sum[i-1][2]) + rgb[i-1][0]
    sum[i][1] = min(sum[i-1][0], sum[i-1][2]) + rgb[i-1][1]
    sum[i][2] = min(sum[i-1][0], sum[i-1][1]) + rgb[i-1][2]

minSum = min(sum[N])
print(minSum)
