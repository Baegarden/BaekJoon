import java.io.*;
import java.util.Scanner;

// Baekjoon 2579 : 계단 오르기
public class Main {
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    public static void main(String [] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int max;
        int []num = new int[N];
        int []sum = new int[N];
        for (int i = 0; i < N; i++) {
            num[i] = scanner.nextInt();
        }

        if(N == 1)
            max = num[0];
        else if(N == 2)
            max = num[0] + num[1];
        else if(N == 3)
            max = Math.max(num[0] + num[2], num[1] + num[2]);
        else {
            sum[0] = num[0];
            sum[1] = num[0] + num[1];
            sum[2] = Math.max(num[0] + num[2], num[1] + num[2]);
            for (int i = 3; i < N; i++) {
                sum[i] = Math.max(sum[i - 2] + num[i], sum[i - 3] + num[i - 1] + num[i]);
            }
            max = sum[N - 1];
        }
        System.out.print(max);
    }
}

# Baekjoon 2579(py) : 계단 오르기
N = int(input())
arr = []
sum = [0 for i in range(N)]
for i in range(N):
    arr.append(int(input()))

if N > 0:
    sum[0] = arr[0]
if N > 1:
    sum[1] = arr[0]+arr[1]
if N > 2:
    sum[2] = max(arr[0]+arr[2], arr[1]+arr[2])

# i번째에 도달하는 두가지 경우
# (1) i-2 -> i
# (2) i-3 -> i-1 -> i
for i in range(3, N):
    sum[i] = max(sum[i-2] + arr[i], sum[i-3] + arr[i-1] + arr[i])

print(sum[N-1])
