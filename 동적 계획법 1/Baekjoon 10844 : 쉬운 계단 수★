import java.io.*;

// Baekjoon 10844 : 쉬운 계단 수
public class Main {
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    public static void main(String [] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int [][]num = new int[N + 1][10];
        num[1][0] = 0;
        int sum = 0;

        for (int i = 1; i <= 9; i++) {
            num[1][i] = 1;
        }

        for (int i = 2; i <= N; i++) {
            for (int j = 0; j <= 9; j++) {
                if(j == 0)
                    num[i][j] = num[i - 1][j + 1] % 1000000000;
                else if(j == 9)
                    num[i][j] = num[i - 1][j - 1] % 1000000000;
                else
                num[i][j] = (num[i - 1][j - 1] + num[i - 1][j + 1]) % 1000000000;
            }
        }

        for (int i = 0; i <= 9; i++) {
            sum = (sum + num[N][i]) % 1000000000;
        }
        System.out.print(sum);
    }
}

# Baekjoon 10844(py) : 쉬운 계단수
N = int(input())
dp = [[0 for j in range(10)] for i in range(N+1)]

for i in range(1, 10):
    dp[1][i] = 1        # dp[1][0] = 0

for i in range(2, N+1):
    for j in range(10):
        if j == 0:
            dp[i][0] = dp[i-1][1] % 1000000000
        elif j == 9:
            dp[i][9] = dp[i-1][8] % 1000000000
        else:
            dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1]) % 1000000000

print(sum(dp[N]) % 1000000000)
