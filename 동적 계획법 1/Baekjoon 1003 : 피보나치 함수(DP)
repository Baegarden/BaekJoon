import java.io.*;

// Baekjoon 1003 : 피보나치 함수(DP)
public class Main {
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    public static void main(String [] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int []arr0 = new int[41];
        int []arr1 = new int[41];
        int N = Integer.parseInt(br.readLine());
        int []input = new int[N];
        int max = 0;
        arr0[0] = 1;
        arr0[1] = 0;
        arr1[0] = 0;
        arr1[1] = 1;
        for (int i = 0; i < N; i++) {
            input[i] = Integer.parseInt(br.readLine());
            if(input[i] > max)
                max = input[i];
        }
        for (int j = 2; j <= max; j++) {
            arr0[j] = arr0[j - 2] + arr0[j - 1];
            arr1[j] = arr1[j - 2] + arr1[j - 1];
        }
        for (int i = 0; i < N; i++) {
            System.out.print(arr0[input[i]] + " " + arr1[input[i]] + "\n");
        }
    }
}

# Baekjoon 1003(py) : 피보나치 수열(DP)
N = int(input())
result = []

for i in range(N):
    M = int(input())
    array0 = [0 for i in range(41)] # 0 출력회수 저장
    array1 = [0 for i in range(41)] # 1 출력회수 저장
    array0[0] = 1  
    array0[1] = 0
    array1[0] = 0
    array1[1] = 1
    for j in range(2, M+1):
        array0[j] = array0[j-1] + array0[j-2]
        array1[j] = array1[j-1] + array1[j-2]
    result.append([array0[M], array1[M]])

for i in result:
    for j in i:
        print(j, end=" ")
    print()
