# Baekjoon 1260 : DFS와 BFS
from collections import deque
import sys

# 입력
N, M, V = map(int, sys.stdin.readline().split())
arr = [[0 for j in range(N+1)] for i in range(N+1)]
for i in range(M):
    x, y = map(int, sys.stdin.readline().split())
    arr[x][y] = 1
    arr[y][x] = 1

# 알고리즘
def bfs(v):
    visited = [v]
    queue = deque()  # 리스트를 써서 pop(0)하게 되면 시간복잡도가 O(N)이다.
    queue.append(v)  # deque를 사용하면 시간복잡도가 O(1)이다.
    while queue:
        x = queue.popleft()
        for i in range(1, N+1):
            if arr[x][i] == 1 and i not in visited:
                visited.append(i)
                queue.append(i)
    return visited

def dfs(v, visited):
    visited += [v]
    for i in range(1, N+1):
        if arr[v][i] == 1 and i not in visited:
            dfs(i, visited)
    return visited

# 출력
print(*dfs(V, []))
print(*bfs(V))
